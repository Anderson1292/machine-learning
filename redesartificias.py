# -*- coding: utf-8 -*-
"""RedesArtificias

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1hgwHENQgTmT7KR4dxczjHt0xVGR_6w1N
"""

import pandas as pd
import keras
from sklearn.model_selection import cross_val_score
from keras.wrappers.scikit_learn import KerasClassifier
from sklearn.model_selection import GridSearchCV

prevision = pd.read_csv('entradas_breast.csv')
classes = pd.read_csv('saidas_breast.csv')

def createNetwork(optimizer,loss,kernel_initializer,activation,neurons):
  model = keras.Sequential()
  model.add(keras.layers.Dense(neurons,activation=activation,kernel_initializer=kernel_initializer,
                               input_dim=30))
  model.add(keras.layers.Dropout(0.2))
  model.add(keras.layers.Dense(neurons,activation=activation,kernel_initializer=kernel_initializer))
  model.add(keras.layers.Dropout(0.2))
  model.add(keras.layers.Dense(1,activation='sigmoid'))
  model.compile(optimizer=optimizer,loss=loss,metrics=['binary_accuracy'])
  return model

modelo = KerasClassifier(build_fn=createNetwork)
parameters = {'batch_size':[10,30],
              'epochs':[50,100],
              'optimizer':['adam','sgd'],
              'loss':['binary_crossentropy','hinge'],
              'kernel_initializer':['random_uniform','normal'],
              'activation':['relu','tanh'],
              'neurons':[16.8]}

grid_search = GridSearchCV(estimator=modelo,
                           param_grid=parameters,
                           scoring='accuracy',
                           cv=5)

grid_search = grid_search.fit(prevision,classes)
best_parameters = grid_search.best_parameters
best_precision = grid_search.best_score_

results = cross_val_score(estimator=modelo,X=prevision,y=classes,
                          cv=10,scoring='accuracy')

results.mean()

results.std()

from sklearn.datasets import load_breast_cancer
from sklearn.model_selection import train_test_split

X,y= load_breast_cancer(return_X_y=True)
X_train,X_test,y_train,y_test = train_test_split(X,y,test_size=0.25)

print(X_train.shape,X_test.shape)

def createNewNetwork():
  model = keras.Sequential()
  model.add(keras.layers.Dense(16,activation='relu',kernel_initializer='random_uniform',
                               input_dim=30))
  model.add(keras.layers.Dropout(0.2))
  model.add(keras.layers.Dense(16,activation='relu',kernel_initializer='random_uniform'))
  model.add(keras.layers.Dropout(0.2))
  model.add(keras.layers.Dense(1,activation='sigmoid'))
  model.compile(optimizer='adam',loss='binary_crossentropy',metrics=['binary_accuracy'])
  return model

modelo1 = KerasClassifier(build_fn=createNewNetwork,
                          epochs=100,batch_size=10)

results = cross_val_score(estimator=modelo1,X = X_train,y = y_train,
                          cv=10,scoring='accuracy')

media = results.mean()
print(media)

desvio = results.std()
print(desvio)

